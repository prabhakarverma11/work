package com.dq.arq.sme.domain;
// default package
// Generated Nov 28, 2016 12:33:13 PM by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

/**
 * Adgroup generated by hbm2java
 */
@Entity
@Table(name = "adgroup", catalog = "arq_sme")
public class AdgroupDo implements java.io.Serializable {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	public enum Status{
		Enabled,Paused,Removed,Unknown
	}
	private Integer id;
	private CampaignDo campaignDo;
	private Long apiId;
	private Status status;	//1-ENABLED,2-PAUSED,3-REMOVED,4-UNKNOWN
	private String categoryName;
	private String productName;
	private Double thresholdKeywordAvgCpc;
	
	//Added to store categories start
		private List<String> productCategoryList;
		
		@Transient
		public List<String> getProductCategoryList() {
			return productCategoryList;
		}

		public void setProductCategoryList(List<String> productCategoryList) {
			this.productCategoryList = productCategoryList;
		}

		//Added to store categories ends	
		
		//Added to store keywordNames starts
		
		private String keywordNames;
		
		@Transient
		public String getKeywordNames(){
			return keywordNames;
		}
		
		public void setKeywordNames(String keywordNames){
			this.keywordNames = keywordNames;
		}
		
		//Added to store keywordNames ends
		
	private String createdBy;
	private Date createdOn;
	
	//Date Strings added to store dates starts
		private String createdOnString;
		
		@Transient
		public String getCreatedOnString() {
			return createdOnString;
		}
		public void setCreatedOnString(String createdOnString) {
			this.createdOnString = createdOnString;
		}

		//Date Strings added to store dates ends
	
	private String updatedBy;
	private Date updatedOn;
	private List<KeywordDo> keywordDos = new ArrayList<KeywordDo>(0);
	private List<AdDo> adDos = new ArrayList<AdDo>(0);

	public AdgroupDo() {
	}

	public AdgroupDo(CampaignDo campaignDo, String createdBy,
			Date createdOn) {
		this.campaignDo = campaignDo;
		this.createdBy = createdBy;
		this.createdOn = createdOn;
	}


	public AdgroupDo(CampaignDo campaignDo, Long apiId,
			String status, String categoryName, String productName,
			Double thresholdKeywordAvgCpc, String createdBy, Date createdOn,
			String updatedBy, Date updatedOn,List<KeywordDo> keywordDos, List<AdDo> adDos) {
		this.campaignDo = campaignDo;
		this.apiId = apiId;
		this.status = Status.valueOf(status);
		this.categoryName = categoryName;
		this.productName = productName;
		this.thresholdKeywordAvgCpc = thresholdKeywordAvgCpc;
		this.createdBy = createdBy;
		this.createdOn = createdOn;
		this.updatedBy = updatedBy;
		this.updatedOn = updatedOn;
		this.keywordDos = keywordDos;
		this.adDos = adDos;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "campaign_id", nullable = false)
	public CampaignDo getCampaignDo() {
		return this.campaignDo;
	}

	public void setCampaignDo(CampaignDo campaignDo) {
		this.campaignDo = campaignDo;
	}

	@Column(name = "api_id")
	public Long getApiId() {
		return this.apiId;
	}

	public void setApiId(Long apiId) {
		this.apiId = apiId;
	}

	@Column(name = "status")
	public String getStatus() {
		return this.status.name();
	}

	public void setStatus(String status) {
		this.status = Status.valueOf(status);
	}

	@Column(name = "category_name", length = 500)
	public String getCategoryName() {
		return this.categoryName;
	}

	public void setCategoryName(String categoryName) {
		this.categoryName = categoryName;
	}

	@Column(name = "product_name", length = 500)
	public String getProductName() {
		return this.productName;
	}

	public void setProductName(String productName) {
		this.productName = productName;
	}

	@Column(name = "threshold_keyword_avgCPC", precision = 22, scale = 0)
	public Double getThresholdKeywordAvgCpc() {
		return this.thresholdKeywordAvgCpc;
	}

	public void setThresholdKeywordAvgCpc(Double thresholdKeywordAvgCpc) {
		this.thresholdKeywordAvgCpc = thresholdKeywordAvgCpc;
	}

	@Column(name = "created_by", nullable = false, length = 50)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_on", nullable = false, length = 0)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Column(name = "updated_by", length = 50)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_on", length = 0)
	public Date getUpdatedOn() {
		return this.updatedOn;
	}

	public void setUpdatedOn(Date updatedOn) {
		this.updatedOn = updatedOn;
	}
	

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "adgroupDo")
	public List<KeywordDo> getKeywordDos() {
		return this.keywordDos;
	}

	public void setKeywordDos(List<KeywordDo> keywordDos) {
		this.keywordDos = keywordDos;
	}


	@OneToMany(fetch = FetchType.LAZY, mappedBy = "adgroupDo")
	public List<AdDo> getAdDos() {
		return this.adDos;
	}

	public void setAdDos(List<AdDo> adDos) {
		this.adDos = adDos;
	}

}
